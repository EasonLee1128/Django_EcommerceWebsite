# Generated by Django 3.0.8 on 2020-08-18 07:15

import accounts.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('sex', models.CharField(choices=[('Man', 'Man'), ('Women', 'Women')], default='Man', max_length=20)),
                ('city', models.CharField(choices=[('New Taipei', 'New Taipei'), ('Taipei', 'taipei'), ('Yilan', 'Yilan'), ('Taoyuan', 'Taoyuan'), ('Hsinchu', 'Hsinchu'), ('Miaoli', 'Miaoli'), ('Taichung', 'Taichung'), ('Changhua', 'Changhua'), ('Nantou', 'Nantou'), ('Yunlin', 'Yunlin'), ('Chiayi', 'Chiayi'), ('Tainan', 'Tainan'), ('Kaohsiung', 'Kaohsiung'), ('Pingtung', 'Pingtung'), ('Taitung', 'Taitung'), ('Hualien', 'Hualien'), ('Penghu', 'Penghu'), ('Kinmen', 'Kinmen'), ('Lienchiang', 'Lienchiang')], max_length=20)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('image', models.ImageField(null=True, upload_to=accounts.models.user_image_filename)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
